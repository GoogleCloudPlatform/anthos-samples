# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Continuous Integration - Pull Request"
on:
  pull_request:
    branches:
      - master
jobs:
  code-tests:
    runs-on: [self-hosted]
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{github.event.pull_request.head.ref}}
        repository: ${{github.event.pull_request.head.repo.full_name}}
    - name: License Check
      run: |
        addlicense -check ./
        if [ $? -eq 0 ]; then
          echo "[✔] All files have the license header"
        else
          echo "[✘] There are files missing the license header"
          exit 1
        fi
    - name: Terraform Checkstyle
      timeout-minutes: 20
      continue-on-error: true
      run: |
        terraform fmt -recursive -check -diff ./
        if [ $? -eq 0 ]; then
          echo "[✔] All terraform files are properly formatted"
        else
          echo "[✘] There are some terraform file not properly formatted"
          exit 1
        fi
    - name: Terraform Validate
      timeout-minutes: 20
      run: |
        for sample in $(cat .github/terraform_samples); do
          echo "Terraform validating: $sample"
          cd $sample
          terraform init -backend=false
          terraform validate .
          if ! [ $? -eq 0 ]; then
            echo "[✘] Terraform validation failed for sample $sample"
            exit 1
          fi
        done
    - name: Golang Checkstyle
      timeout-minutes: 20
      run: |
        golint ./... > golint.err
        [ -s golint.err ]
        if [ $? -eq 0 ]; then
          echo "[✘] Golang (.go) files have linting errors"
        fi
