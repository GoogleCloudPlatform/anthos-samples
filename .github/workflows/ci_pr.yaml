# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Continuous Integration - Pull Request"
on:
  pull_request:
    branches:
      - master
jobs:
  code-tests:
    runs-on: [self-hosted]
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{github.event.pull_request.head.ref}}
        repository: ${{github.event.pull_request.head.repo.full_name}}
    - name: License Check
      continue-on-error: true
      run: |
        addlicense -check ./ >> license.err
    - name: Terraform Checkstyle
      timeout-minutes: 20
      continue-on-error: true
      run: |
        terraform fmt -recursive -check -diff ./ >> terraform-fmt.err
    # - name: Terraform Validate
    #   timeout-minutes: 20
    #   continue-on-error: true
    #   run: |
    #     for sample in $(cat .github/terraform_samples); do
    #       echo "Terraform validating: $sample"
    #       cd $sample
    #       terraform init -backend=false
    #       terraform validate -json . >> terraform-validate.err
    #       cd ..
    #     done
    - name: Golang Checkstyle
      timeout-minutes: 20
      continue-on-error: true
      run: |
        golint ./... > golint.err
        [ -s golint.err ]
    - name: Comment PR with errors
      env:
        COMMENTS_URL: ${{ github.event.pull_request.comments_url }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        set -x
        touch all_errors.err
        [ -s license.err ]
        if [ $? -eq 0 ]; then
          echo "- [âœ˜]" >> all_errors.err
          curl \
            -X POST \
            $COMMENTS_URL \
            -H "Content-Type: application/json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            --data '{ "body": "ðŸ’£ ðŸš¨ There are files missing the license header. Use [google/addlicense](https://github.com/google/addlicense) to add license headers to the following files. </br>```'"$(cat license.err)"'```"}'
        fi

        [ -s terraform-fmt.err ]
        if [ $? -eq 0 ]; then
          echo "- [âœ˜]" >> all_errors.err
          curl \
            -X POST \
            $COMMENTS_URL \
            -H "Content-Type: application/json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            --data '{ "body": "ðŸ’£ ðŸš¨ There were Terraform files incorrectly formatted. Use `terraform fmt -recursive -check -diff ./` format the Terraform files"}'
        fi

        [ -s all_errors.err ]
        if ! [ $? -eq 0 ]; then
          curl \
            -X POST \
            $COMMENTS_URL \
            -H "Content-Type: application/json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            --data '{ "body": "âœ… ðŸš€  All static code and unit tests have passed!!! ðŸš€ âœ…"}'
        exit 1
        fi

        curl \
          -X POST \
          $COMMENTS_URL \
          -H "Content-Type: application/json" \
          -H "Authorization: token $GITHUB_TOKEN" \
          --data '{ "body": "ðŸ’£ ðŸš¨ Some tests have failed; please fix them ðŸš¨ ðŸ’£ "}'
        exit 1
