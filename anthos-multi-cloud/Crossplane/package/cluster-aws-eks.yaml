apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: cluster-aws
  labels:
    crossplane.io/xrd: compositeclusters.demo.anthos.com
    provider: aws
    cluster: eks
spec:
  compositeTypeRef:
    apiVersion: demo.anthos.com/v1
    kind:  CompositeCluster
  patchSets:
  - name: metadata
    patches:
    - fromFieldPath: metadata.labels
  resources:
  - name: ekscluster
    base:
      apiVersion: eks.aws.crossplane.io/v1beta1
      kind: Cluster
      metadata:
        name: testeks
        labels:
          cluster: testeks
      spec:
        providerConfigRef:
          name: default-aws
        forProvider:
          region: us-east-1
          version: "1.23"
          resourcesVpcConfig:
            endpointPublicAccess: true
            subnetIdSelector:
              matchControllerRef: true
          roleArnSelector:
            matchControllerRef: true
            matchLabels:
              role: controlplane
        writeConnectionSecretToRef:
          name: cluster-conn
          namespace: default
    patches:
    - fromFieldPath: status.atProvider.identity.oidc.issuer
      toFieldPath: status.odicIssuerUrl
    - fromFieldPath: metadata.annotations[crossplane.io/external-name]
      toFieldPath: metadata.annotations[crossplane.io/external-name]
    - fromFieldPath: spec.parameters.k8sVersion
      toFieldPath: spec.forProvider.version
    - fromFieldPath: metadata.uid
      toFieldPath: spec.writeConnectionSecretToRef.name
      transforms:
        - type: string
          string:
            fmt: "%s-ekscluster"
    - type: ToCompositeFieldPath
      fromFieldPath: metadata.annotations[crossplane.io/external-name]
      toFieldPath: status.clusterName
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.status
      toFieldPath: status.controlPlaneStatus
    - fromFieldPath: spec.writeConnectionSecretToRef.namespace
      toFieldPath: spec.writeConnectionSecretToRef.namespace
    readinessChecks:
    - type: MatchString
      fieldPath: status.atProvider.status
      matchString: ACTIVE
    connectionDetails:
      - fromConnectionSecretKey: kubeconfig
  - name: eksnodegroup
    base:
      apiVersion: eks.aws.crossplane.io/v1alpha1
      kind: NodeGroup
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          clusterNameSelector:
            matchControllerRef: true
          nodeRoleSelector:
            matchControllerRef: true
            matchLabels:
              role: nodegroup
          subnetSelector:
            matchLabels:
              access: public
          scalingConfig:
            minSize: 3
            maxSize: 10
            desiredSize: 3
          instanceTypes:
            - t3.small
    patches:
    - fromFieldPath: spec.parameters.nodeSize
      toFieldPath: spec.forProvider.instanceTypes[0]
      transforms:
        - type: map
          map:
            small: t3.small
            medium: t3.medium
            large: t3.large
    - fromFieldPath: spec.parameters.minNodeCount
      toFieldPath: spec.forProvider.scalingConfig.minSize
    - fromFieldPath: spec.parameters.minNodeCount
      toFieldPath: spec.forProvider.scalingConfig.desiredSize
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.status
      toFieldPath: status.nodePoolStatus
    readinessChecks:
    - type: MatchString
      fieldPath: status.atProvider.status
      matchString: ACTIVE
  - name: iamrole-controlplane
    base:
      apiVersion: iam.aws.crossplane.io/v1beta1
      kind: Role
      metadata:
        labels:
          role: controlplane
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          assumeRolePolicyDocument: |
            {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Effect": "Allow",
                      "Principal": {
                          "Service": [
                              "eks.amazonaws.com"
                          ]
                      },
                      "Action": [
                          "sts:AssumeRole"
                      ]
                  }
              ]
            }
  - name: iamrole-nodegroup
    base:
      apiVersion: iam.aws.crossplane.io/v1beta1
      kind: Role
      metadata:
        labels:
          role: nodegroup
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          assumeRolePolicyDocument: |
            {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Effect": "Allow",
                      "Principal": {
                          "Service": [
                              "ec2.amazonaws.com"
                          ]
                      },
                      "Action": [
                          "sts:AssumeRole"
                      ]
                  }
              ]
            }
  - name: iamattachment-controlplane
    base:
      apiVersion: iam.aws.crossplane.io/v1beta1
      kind: RolePolicyAttachment
      metadata:
        labels:
          access: public
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          policyArn: arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
          roleNameSelector:
            matchControllerRef: true
            matchLabels:
              role: controlplane
  - name: iamattachment-service
    base:
      apiVersion: iam.aws.crossplane.io/v1beta1
      kind: RolePolicyAttachment
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          policyArn: arn:aws:iam::aws:policy/AmazonEKSServicePolicy
          roleNameSelector:
            matchControllerRef: true
            matchLabels:
              role: controlplane
  - name: iamattachment-worker
    base:
      apiVersion: iam.aws.crossplane.io/v1beta1
      kind: RolePolicyAttachment
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          policyArn: arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
          roleNameSelector:
            matchControllerRef: true
            matchLabels:
              role: nodegroup
  - name: iamattachment-cni
    base:
      apiVersion: iam.aws.crossplane.io/v1beta1
      kind: RolePolicyAttachment
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          policyArn: arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
          roleNameSelector:
            matchControllerRef: true
            matchLabels:
              role: nodegroup
  - name: iamattachment-registry
    base:
      apiVersion: iam.aws.crossplane.io/v1beta1
      kind: RolePolicyAttachment 
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          policyArn: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
          roleNameSelector:
            matchControllerRef: true
            matchLabels:
              role: nodegroup
  - name: vpc-nodepool
    base:
      apiVersion: ec2.aws.crossplane.io/v1beta1
      kind: VPC
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          cidrBlock: 10.0.0.0/16
          tags:
          - key: Name
            value: devops-catalog
          - key: kubernetes.io/cluster/devops-catalog
            value: shared
  - name: sc-nodepool
    base:
      apiVersion: ec2.aws.crossplane.io/v1beta1
      kind: SecurityGroup
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          description: Cluster communication with worker nodes
          groupName: devops-catalog
          region: us-east-1
          vpcIdSelector:
            matchControllerRef: true
          egress:
          - fromPort: 0
            toPort: 0
            ipProtocol: "-1"
            ipRanges:
            - cidrIp: "0.0.0.0/0"
  - name: subnet-nodepool-1a
    base:
      apiVersion: ec2.aws.crossplane.io/v1beta1
      kind: Subnet
      metadata:
        labels:
          zone: us-east-1a
          access: public
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          availabilityZone: us-east-1a
          cidrBlock: 10.0.0.0/24
          vpcIdSelector:
            matchControllerRef: true
          mapPublicIPOnLaunch: true
          tags:
            - key: Name
              value: devops-catalog
            - key: kubernetes.io/cluster/devops-catalog
              value: shared
  - name: subnet-nodepool-1b
    base:
      apiVersion: ec2.aws.crossplane.io/v1beta1
      kind: Subnet
      metadata:
        labels:
          zone: us-east-1b
          access: public
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          availabilityZone: us-east-1b
          cidrBlock: 10.0.1.0/24
          vpcIdSelector:
            matchControllerRef: true
          mapPublicIPOnLaunch: true
          tags:
            - key: Name
              value: devops-catalog
            - key: kubernetes.io/cluster/devops-catalog
              value: shared
  - name: subnet-nodepool-1c
    base:
      apiVersion: ec2.aws.crossplane.io/v1beta1
      kind: Subnet
      metadata:
        labels:
          zone: us-east-1c
          access: public
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          availabilityZone: us-east-1c
          cidrBlock: 10.0.2.0/24
          vpcIdSelector:
            matchControllerRef: true
          mapPublicIPOnLaunch: true
          tags:
            - key: Name
              value: devops-catalog
            - key: kubernetes.io/cluster/devops-catalog
              value: shared
  - name: gateway
    base:
      apiVersion: ec2.aws.crossplane.io/v1beta1
      kind: InternetGateway
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          vpcIdSelector:
            matchControllerRef: true
  - name: routetable
    base:
      apiVersion: ec2.aws.crossplane.io/v1beta1
      kind: RouteTable
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          vpcIdSelector:
            matchControllerRef: true
          routes:
            - destinationCidrBlock: 0.0.0.0/0
              gatewayIdSelector:
                matchControllerRef: true
          associations:
            - subnetIdSelector:
                matchControllerRef: true
                matchLabels:
                  zone: us-east-1a
                  access: public
            - subnetIdSelector:
                matchControllerRef: true
                matchLabels:
                  zone: us-east-1b
                  access: public
            - subnetIdSelector:
                matchControllerRef: true
                matchLabels:
                  zone: us-east-1c
                  access: public
  - name: attachedCluster
    base:
      apiVersion: anthos.gcp.crossplane.io/v1alpha1
      kind: AttachedCluster
      spec:
        providerConfigRef: 
          name: default-gcp
        forProvider:
          location: us-east4
          distribution: eks
          clusterCredentials:
            source: Secret
            secretRef:
              namespace: default
              key: kubeconfig
    patches:
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.membershipId
      toFieldPath: status.membershipId
    - fromFieldPath: spec.parameters.adminUsers
      toFieldPath: spec.forProvider.adminUsers
    - fromFieldPath: spec.parameters.fleetProject
      toFieldPath: spec.forProvider.fleet.project
      transforms:
        - type: string
          string:
            fmt: "projects/%s"
    - fromFieldPath: status.odicIssuerUrl
      toFieldPath: spec.forProvider.authority.issuerUrl
    - fromFieldPath: spec.parameters.k8sVersion
      toFieldPath: spec.forProvider.platformVersion
      transforms:
        - type: map
          map:
            1.23: 1.23.0-gke.1
    - fromFieldPath: "metadata.uid"
      toFieldPath: spec.forProvider.clusterCredentials.secretRef.name
      transforms:
        - type: string
          string:
            fmt: "%s-ekscluster"
  - name: feature
    base:
      apiVersion: anthos.gcp.crossplane.io/v1alpha1
      kind: HubFeature
      spec:
        providerConfigRef:
          name: default-gcp
        forProvider:
          location: global
          featureName: configmanagement
  - name: configSync
    base:
      apiVersion: anthos.gcp.crossplane.io/v1alpha1
      kind: HubFeatureMembership
      spec:
        providerConfigRef:
          name: default-gcp
        forProvider:
          location: global
          feature: configmanagement
          configManagement:
            version: "1.12.0"
            git:
              secretType: none
              repo: https://github.com/bkauf/anthos-crossplane-demo.git
              policyDir: cluster-acm/
              branch: master
    patches:
    - fromFieldPath: status.membershipId
      toFieldPath: spec.forProvider.membership
   # - fromFieldPath: spec.parameters.configSync.branch
   #   toFieldPath: spec.forProvider.configManagement.git.branch
   # - fromFieldPath: spec.parameters.configSync.repo
   #   toFieldPath: spec.forProvider.configManagement.git.repo
   # - fromFieldPath: spec.parameters.configSync.policyDir
   #   toFieldPath: spec.forProvider.configManagement.git.policyDir