apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: cluster-aws-gke
  labels:
    crossplane.io/xrd: compositeclusters.demo.anthos.com
    provider: aws
    cluster: eks
spec:
  compositeTypeRef:
    apiVersion: demo.anthos.com/v1
    kind:  CompositeCluster
  resources:
  - name: anthos-service-agent-role
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: Role
      metadata:
        labels:
          role: anthos-service-agent-role
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          assumeRolePolicy: |
            {
            "Version": "2012-10-17",
            "Statement": [
              {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
              "Federated": "accounts.google.com"
              },
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                "accounts.google.com:sub": "service-261832825633@gcp-sa-gkemulticloud.iam.gserviceaccount.com"
                }
              }
              }
            ]
            }
  - name: anthos-service-agent-policy
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: Policy
      metadata:
        labels:
          policy: anthos-service-agent-policy
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          policy: |
            {
            "Version": "2012-10-17",
            "Statement": [
                {
                  "Sid": "",
                  "Effect": "Allow",
                  "Action": [
                    "ec2:AuthorizeSecurityGroupEgress",
                    "ec2:AuthorizeSecurityGroupIngress",
                    "ec2:CreateLaunchTemplate",
                    "ec2:CreateNetworkInterface",
                    "ec2:CreateSecurityGroup",
                    "ec2:CreateTags",
                    "ec2:CreateVolume",
                    "ec2:DeleteLaunchTemplate",
                    "ec2:DeleteNetworkInterface",
                    "ec2:DeleteSecurityGroup",
                    "ec2:DeleteTags",
                    "ec2:DeleteVolume",
                    "ec2:DescribeAccountAttributes",
                    "ec2:DescribeInternetGateways",
                    "ec2:DescribeKeyPairs",
                    "ec2:DescribeLaunchTemplates",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DescribeSecurityGroupRules",
                    "ec2:DescribeSecurityGroups",
                    "ec2:DescribeSubnets",
                    "ec2:DescribeVpcs",
                    "ec2:GetConsoleOutput",
                    "ec2:ModifyNetworkInterfaceAttribute",
                    "ec2:RevokeSecurityGroupEgress",
                    "ec2:RevokeSecurityGroupIngress",
                    "ec2:RunInstances",
                    "iam:AWSServiceName",
                    "iam:CreateServiceLinkedRole",
                    "iam:PassRole",
                    "autoscaling:CreateAutoScalingGroup",
                    "autoscaling:CreateOrUpdateTags",
                    "autoscaling:DeleteAutoScalingGroup",
                    "autoscaling:DeleteTags",
                    "autoscaling:DescribeAutoScalingGroups",
                    "autoscaling:TerminateInstanceInAutoScalingGroup",
                    "autoscaling:UpdateAutoScalingGroup",
                    "elasticloadbalancing:AddTags",
                    "elasticloadbalancing:CreateListener",
                    "elasticloadbalancing:CreateLoadBalancer",
                    "elasticloadbalancing:CreateTargetGroup",
                    "elasticloadbalancing:DeleteListener",
                    "elasticloadbalancing:DeleteLoadBalancer",
                    "elasticloadbalancing:DeleteTargetGroup",
                    "elasticloadbalancing:DescribeListeners",
                    "elasticloadbalancing:DescribeLoadBalancers",
                    "elasticloadbalancing:DescribeTargetGroups",
                    "elasticloadbalancing:DescribeTargetHealth",
                    "elasticloadbalancing:ModifyTargetGroupAttributes",
                    "elasticloadbalancing:RemoveTags",
                    "kms:DescribeKey",
                    "kms:Encrypt",
                    "kms:GenerateDataKeyWithoutPlaintext"
                    ],
                  "Resource": "*"
                }
              ]
            }
  - name: anthos-service-agent-attach
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: RolePolicyAttachment
      metadata:
        name: sample-node-policy-3
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          roleSelector:
            matchLabels:
              role: anthos-service-agent-role
          policyArnSelector:
            matchLabels:
              policy: anthos-service-agent-policy     
  - name: vpc
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPC
      metadata:
        name: anthosVPC
        labels:
          vpcName: anthosVPC
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          cidrBlock: 10.0.0.0/16
          region: us-east-1
          tags:
            Name: anthos-VPC   
          enableDnsSupport: true
          enableDnsHostnames: true 
  - name: subnet-zone-1
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: Subnet
      metadata:
        name: subnet-zone-1
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          cidrBlock: 10.0.1.0/24
          region: us-east-1
          availabilityZone: us-east-1a
          vpcIdSelector:
            matchLabels:
              vpcName: anthosVPC
          tags:
            Name: anthos-subnet-1

  #   patches:
  #   - fromFieldPath: status.membershipId
  #     toFieldPath: spec.forProvider.membership
   # - fromFieldPath: spec.parameters.configSync.branch
   #   toFieldPath: spec.forProvider.configManagement.git.branch
   # - fromFieldPath: spec.parameters.configSync.repo
   #   toFieldPath: spec.forProvider.configManagement.git.repo
   # - fromFieldPath: spec.parameters.configSync.policyDir
   #   toFieldPath: spec.forProvider.configManagement.git.policyDir