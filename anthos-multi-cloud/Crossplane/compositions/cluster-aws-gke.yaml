apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: cluster-aws-gke
  labels:
    crossplane.io/xrd: compositeclusters.demo.anthos.com
    provider: aws
    cluster: eks
spec:
  compositeTypeRef:
    apiVersion: demo.anthos.com/v1
    kind:  CompositeCluster
  resources:
  - name: anthos-service-agent-role
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: Role
      metadata:
        labels:
          role: anthos-service-agent-role
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          assumeRolePolicy: |
            {
            "Version": "2012-10-17",
            "Statement": [
              {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
              "Federated": "accounts.google.com"
              },
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                "accounts.google.com:sub": "service-261832825633@gcp-sa-gkemulticloud.iam.gserviceaccount.com"
                }
              }
              }
            ]
            }
  - name: anthos-service-agent-policy
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: Policy
      metadata:
        labels:
          policy: anthos-service-agent-policy
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          policy: |
            {
            "Version": "2012-10-17",
            "Statement": [
                {
                  "Sid": "",
                  "Effect": "Allow",
                  "Action": [
                    "ec2:AuthorizeSecurityGroupEgress",
                    "ec2:AuthorizeSecurityGroupIngress",
                    "ec2:CreateLaunchTemplate",
                    "ec2:CreateNetworkInterface",
                    "ec2:CreateSecurityGroup",
                    "ec2:CreateTags",
                    "ec2:CreateVolume",
                    "ec2:DeleteLaunchTemplate",
                    "ec2:DeleteNetworkInterface",
                    "ec2:DeleteSecurityGroup",
                    "ec2:DeleteTags",
                    "ec2:DeleteVolume",
                    "ec2:DescribeAccountAttributes",
                    "ec2:DescribeInternetGateways",
                    "ec2:DescribeKeyPairs",
                    "ec2:DescribeLaunchTemplates",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DescribeSecurityGroupRules",
                    "ec2:DescribeSecurityGroups",
                    "ec2:DescribeSubnets",
                    "ec2:DescribeVpcs",
                    "ec2:GetConsoleOutput",
                    "ec2:ModifyNetworkInterfaceAttribute",
                    "ec2:RevokeSecurityGroupEgress",
                    "ec2:RevokeSecurityGroupIngress",
                    "ec2:RunInstances",
                    "iam:AWSServiceName",
                    "iam:CreateServiceLinkedRole",
                    "iam:PassRole",
                    "autoscaling:CreateAutoScalingGroup",
                    "autoscaling:CreateOrUpdateTags",
                    "autoscaling:DeleteAutoScalingGroup",
                    "autoscaling:DeleteTags",
                    "autoscaling:DescribeAutoScalingGroups",
                    "autoscaling:TerminateInstanceInAutoScalingGroup",
                    "autoscaling:UpdateAutoScalingGroup",
                    "elasticloadbalancing:AddTags",
                    "elasticloadbalancing:CreateListener",
                    "elasticloadbalancing:CreateLoadBalancer",
                    "elasticloadbalancing:CreateTargetGroup",
                    "elasticloadbalancing:DeleteListener",
                    "elasticloadbalancing:DeleteLoadBalancer",
                    "elasticloadbalancing:DeleteTargetGroup",
                    "elasticloadbalancing:DescribeListeners",
                    "elasticloadbalancing:DescribeLoadBalancers",
                    "elasticloadbalancing:DescribeTargetGroups",
                    "elasticloadbalancing:DescribeTargetHealth",
                    "elasticloadbalancing:ModifyTargetGroupAttributes",
                    "elasticloadbalancing:RemoveTags",
                    "kms:DescribeKey",
                    "kms:Encrypt",
                    "kms:GenerateDataKeyWithoutPlaintext"
                    ],
                  "Resource": "*"
                }
              ]
            }
  - name: anthos-service-agent-attach
    base:
      apiVersion: iam.aws.upbound.io/v1beta1
      kind: RolePolicyAttachment
      metadata:
        name: sample-node-policy-3
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          roleSelector:
            matchLabels:
              role: anthos-service-agent-role
          policyArnSelector:
            matchLabels:
              policy: anthos-service-agent-policy     
  - name: vpc
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: VPC
      metadata:
        name: anthosVPC
        labels:
          vpcName: anthosVPC
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          cidrBlock: 10.0.0.0/16
          region: us-east-1
          tags:
            Name: anthos-VPC   
          enableDnsSupport: true
          enableDnsHostnames: true 
  - name: subnet-zone-1-private
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: Subnet
      metadata:
        name: subnet-zone-1-private
        labels:
          subnetName: subnet-zone-1-private
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          cidrBlock: 10.0.1.0/24
          region: us-east-1
          availabilityZone: us-east-1a
          vpcIdSelector:
            matchLabels:
              vpcName: anthosVPC
          tags:
            Name: anthos-subnet-1-private
  - name: subnet-zone-2-private
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: Subnet
      metadata:
        name: subnet-zone-2-private
        labels:
          subnetName: subnet-zone-2-private
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          cidrBlock: 10.0.2.0/24
          region: us-east-1
          availabilityZone: us-east-1b
          vpcIdSelector:
            matchLabels:
              vpcName: anthosVPC
          tags:
            Name: anthos-subnet-2-private
  - name: subnet-zone-3-private
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: Subnet
      metadata:
        name: subnet-zone-3-private
        labels:
          subnetName: subnet-zone-3-private
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          cidrBlock: 10.0.3.0/24
          region: us-east-1
          availabilityZone: us-east-1c
          vpcIdSelector:
            matchLabels:
              vpcName: anthosVPC
          tags:
            Name: anthos-subnet-3-private
  - name: subnet-zone-1-public
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: Subnet
      metadata:
        name: subnet-zone-1-public
        labels:
          subnetName: subnet-zone-1-public
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          cidrBlock: 10.0.101.0/24
          region: us-east-1
          availabilityZone: us-east-1a
          mapPublicIpOnLaunch: true
          vpcIdSelector:
            matchLabels:
              vpcName: anthosVPC
          tags:
            Name: anthos-1-public
  - name: subnet-zone-2-public
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: Subnet
      metadata:
        name: subnet-zone-2-public
        labels:
          subnetName: subnet-zone-2-public
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          cidrBlock: 10.0.102.0/24
          region: us-east-1
          availabilityZone: us-east-1b
          mapPublicIpOnLaunch: true
          vpcIdSelector:
            matchLabels:
              vpcName: anthosVPC
          tags:
            Name: anthos-subnet-2-public   
  - name: subnet-zone-3-public
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: Subnet
      metadata:
        name: subnet-zone-3-public
        labels:
          subnetName: subnet-zone-3-public
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          cidrBlock: 10.0.103.0/24
          region: us-east-1
          availabilityZone: us-east-1c
          mapPublicIpOnLaunch: true
          vpcIdSelector:
            matchLabels:
              vpcName: anthosVPC
          tags:
            Name: anthos-subnet-3-public
  - name: internet-gateway
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: InternetGateway
      metadata:
        name: routegw
        labels:
          gwname: anthos-inet-gw
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          tags:
            Name: main
          vpcIdSelector:
            matchLabels:
              vpcName: anthosVPC
          tags:
            Name: anthos-inet-gw
  
  - name: routingtable-subnet-1-pub
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: RouteTable
      metadata:
        name: routingtable-subnet-1
        labels:
          tableName: routingtable-subnet-1-pub
      spec:
        providerConfigRef: 
            name: default-aws
        forProvider:
          region: us-east-1
          tags:
            Name: anthos-public-sub1
          vpcIdSelector:
            matchLabels:
              vpcName: anthosVPC
  - name: routingtabe-assoc-1
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: RouteTableAssociation
      metadata:
        name: example
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          tags:
            Name: anthos-public-sub1
          routeTableIdSelector:
            matchLabels:
              tableName: routingtable-subnet-1-pub
          subnetIdSelector:
            matchLabels:
              subnetName: subnet-zone-1-public
  - name: routingtable-subnet-2-pub
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: RouteTable
      metadata:
        name: routingtable-subnet-2
        labels:
          tableName: routingtable-subnet-2-pub
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          tags:
            Name: anthos-public-sub2
          vpcIdSelector:
            matchLabels:
              vpcName: anthosVPC
  - name: routingtabe-assoc-2
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: RouteTableAssociation
      metadata:
        name: example
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          routeTableIdSelector:
            matchLabels:
              tableName: routingtable-subnet-2-pub
          subnetIdSelector:
            matchLabels:
              subnetName: subnet-zone-2-public
  - name: routingtable-subnet-3-pub
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: RouteTable
      metadata:
        name: routingtable-subnet-3
        labels:
          tableName: routingtable-subnet-3-pub
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          tags:
            Name: anthos-public-sub3
          vpcIdSelector:
            matchLabels:
              vpcName: anthosVPC
  - name: routingtabe-assoc-3
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: RouteTableAssociation
      metadata:
        name: example
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          routeTableIdSelector:
            matchLabels:
              tableName: routingtable-subnet-3-pub
          subnetIdSelector:
            matchLabels:
              subnetName: subnet-zone-3-public
  - name: default-route-1
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: DefaultRouteTable
      metadata:
        name: route1
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          defaultRouteTableIdRef:
            matchLabels:
              tableName: routingtable-subnet-1-pub
          region: us-east-1
          route:
            - cidrBlock: 0.0.0.0/0
              gatewayIdSelector:
                matchLabels:
                  gwname: anthos-inet-gw
  - name: default-route-2
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: DefaultRouteTable
      metadata:
        name: route3
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          defaultRouteTableIdRef:
            matchLabels:
              tableName: routingtable-subnet-2-pub
          region: us-east-1
          route:
            - cidrBlock: 0.0.0.0/0
              gatewayIdSelector:
                matchLabels:
                  gwname: anthos-inet-gw
  - name: default-route-3
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: DefaultRouteTable
      metadata:
        name: route-3
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          defaultRouteTableIdRef:
            matchLabels:
              tableName: routingtable-subnet-3-pub
          region: us-east-1
          route:
            - cidrBlock: 0.0.0.0/0
              gatewayIdSelector:
                matchLabels:
                  gwname: anthos-inet-gw
  - name: routingtable-subnet-1-private
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: RouteTable
      metadata:
        name: routingtable-subnet-1-private
        labels:
          tableName: routingtable-subnet-1-priv
      spec:
        providerConfigRef: 
            name: default-aws
        forProvider:
          region: us-east-1
          tags:
            Name: anthos-private-sub1
          vpcIdSelector:
            matchLabels:
              vpcName: anthosVPC
  - name: routingtabe-assoc-1-private
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: RouteTableAssociation
      metadata:
        name: example
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          routeTableIdSelector:
            matchLabels:
              tableName: routingtable-subnet-1-priv
          subnetIdSelector:
            matchLabels:
              subnetName: subnet-zone-1-private
  - name: routingtable-subnet-2-private
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: RouteTable
      metadata:
        name: routingtable-subnet-2-priv
        labels:
          tableName: routingtable-subnet-2-priv
      spec:
        providerConfigRef: 
            name: default-aws
        forProvider:
          region: us-east-1
          tags:
            Name: anthos-private-sub2
          vpcIdSelector:
            matchLabels:
              vpcName: anthosVPC
  - name: routingtabe-assoc-2-private
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: RouteTableAssociation
      metadata:
        name: example
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          routeTableIdSelector:
            matchLabels:
              tableName: routingtable-subnet-2-priv
          subnetIdSelector:
            matchLabels:
              subnetName: subnet-zone-2-private
  - name: routingtable-subnet-3-private
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: RouteTable
      metadata:
        name: routingtable-subnet-3-priv
        labels:
          tableName: routingtable-subnet-3-priv
      spec:
        providerConfigRef: 
            name: default-aws
        forProvider:
          region: us-east-1
          tags:
            Name: anthos-private-sub3
          vpcIdSelector:
            matchLabels:
              vpcName: anthosVPC
  - name: routingtabe-assoc-3-private
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: RouteTableAssociation
      metadata:
        name: example
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          routeTableIdSelector:
            matchLabels:
              tableName: routingtable-subnet-3-priv
          subnetIdSelector:
            matchLabels:
              subnetName: subnet-zone-3-private
  - name: eip-subnet-1
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: EIP
      metadata:
        labels:
          eipName: eip-subnet-1
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          vpc: false
  - name: eip-subnet-2
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: EIP
      metadata:
        labels:
          eipName: eip-subnet-2
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          vpc: false
  - name: eip-subnet-3
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: EIP
      metadata:
        labels:
          eipName: eip-subnet-3
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          vpc: false       
  - name: nat-gw-1
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: NATGateway
      metadata:
        name: nat-gw-1
        labels:
          natName: nat-gw-1
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          allocationIdSelector:
            matchLabels:
              eipName: eip-subnet-1
          subnetIdSelector:
            matchLabels:
              subnetName: subnet-zone-1-public
          tags:
            Name: subnet-1-pub-NAT
  - name: nat-gw-2
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: NATGateway
      metadata:
        name: nat-gw-2
        labels:
          natName: nat-gw-2
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          allocationIdSelector:
            matchLabels:
              eipName: eip-subnet-2
          subnetIdSelector:
            matchLabels:
              subnetName: subnet-zone-2-public
          tags:
            Name: subnet-2-pub-NAT
  - name: nat-gw-3
    base:
      apiVersion: ec2.aws.upbound.io/v1beta1
      kind: NATGateway
      metadata:
        name: nat-gw-3
        labels:
          natName: nat-gw-3
      spec:
        providerConfigRef: 
          name: default-aws
        forProvider:
          region: us-east-1
          allocationIdSelector:
            matchLabels:
              eipName: eip-subnet-3
          subnetIdSelector:
            matchLabels:
              subnetName: subnet-zone-3-public
          tags:
            Name: subnet-3-pub-NAT


  
  #   patches:
  #   - fromFieldPath: status.membershipId
  #     toFieldPath: spec.forProvider.membership
   # - fromFieldPath: spec.parameters.configSync.branch
   #   toFieldPath: spec.forProvider.configManagement.git.branch
   # - fromFieldPath: spec.parameters.configSync.repo
   #   toFieldPath: spec.forProvider.configManagement.git.repo
   # - fromFieldPath: spec.parameters.configSync.policyDir
   #   toFieldPath: spec.forProvider.configManagement.git.policyDir