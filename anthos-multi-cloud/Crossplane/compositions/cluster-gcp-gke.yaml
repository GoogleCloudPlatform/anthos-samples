# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: cluster-gcp
  labels:
    crossplane.io/xrd: compositeclusters.demo.anthos.com
    provider: gcp
    cluster: gke
spec:
  compositeTypeRef:
    apiVersion: demo.anthos.com/v1
    kind:  CompositeCluster
  patchSets:
  - name: metadata
    patches:
    - fromFieldPath: metadata.labels
  resources:
  - name: cluster
    base:
      apiVersion: container.gcp.crossplane.io/v1beta2
      kind: Cluster
      spec:
        providerConfigRef:
          name: default-gcp
        forProvider:
          initialClusterVersion: "1.23"
          location: us-east1
          networkConfig:
            enableIntraNodeVisibility: true
          loggingService: logging.googleapis.com/kubernetes
          monitoringService: monitoring.googleapis.com/kubernetes
          addonsConfig:
            gcePersistentDiskCsiDriverConfig:
              enabled: true
          network: "default"
        writeConnectionSecretToRef:
          namespace: default
    patches:
    - fromFieldPath: metadata.annotations[crossplane.io/external-name]
      toFieldPath: metadata.annotations[crossplane.io/external-name]
    - fromFieldPath: spec.parameters.k8sVersion
      toFieldPath: spec.forProvider.initialClusterVersion
    - fromFieldPath: metadata.uid
      toFieldPath: spec.writeConnectionSecretToRef.name
      transforms:
        - type: string
          string:
            fmt: "%s-gkecluster"
    - type: ToCompositeFieldPath
      fromFieldPath: metadata.annotations[crossplane.io/external-name]
      toFieldPath: status.clusterName
    - type: ToCompositeFieldPath
      fromFieldPath: metadata.annotations[crossplane.io/external-name]
      toFieldPath: status.membershipId
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.selfLink
      toFieldPath: status.clusterSelfLink
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.status
      toFieldPath: status.controlPlaneStatus
    - fromFieldPath: spec.writeConnectionSecretToRef.namespace
      toFieldPath: spec.writeConnectionSecretToRef.namespace
    readinessChecks:
    - type: MatchString
      fieldPath: status.atProvider.status
      matchString: ACTIVE
    connectionDetails:
      - fromConnectionSecretKey: kubeconfig
  - name: nodepool
    base:
      apiVersion: container.gcp.crossplane.io/v1beta1
      kind: NodePool
      spec:
        providerConfigRef:
          name: default-gcp
        forProvider:
          clusterRef:
            matchControllerRef: true
          config:
            machineType: n1-standard-1
            diskSizeGb: 120
            diskType: pd-ssd
            imageType: cos_containerd
            labels:
              test-label: crossplane-created
            oauthScopes:
            - "https://www.googleapis.com/auth/devstorage.read_only"
            - "https://www.googleapis.com/auth/logging.write"
            - "https://www.googleapis.com/auth/monitoring"
            - "https://www.googleapis.com/auth/servicecontrol"
            - "https://www.googleapis.com/auth/service.management.readonly"
            - "https://www.googleapis.com/auth/trace.append"
          initialNodeCount: 3
          locations:
            - "us-east1-b"
    patches:
    - fromFieldPath: status.clusterName
      toFieldPath: spec.forProvider.clusterRef.name
    - fromFieldPath: spec.parameters.nodeSize
      toFieldPath: spec.forProvider.config.machineType
      transforms:
        - type: map
          map:
            small: e2-small
            medium: e2-medium
            large: e2-standard-2
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.status
      toFieldPath: status.nodePoolStatus
    readinessChecks:
    - type: MatchString
      fieldPath: status.atProvider.status
      matchString: ACTIVE
  - name: hubmembership
    base:
      apiVersion: anthos.gcp.crossplane.io/v1alpha1
      kind: HubMembership
      spec:
        providerConfigRef:
          name: default-gcp
    patches:
    - fromFieldPath: status.membershipId
      toFieldPath: spec.forProvider.membershipId
    - fromFieldPath: status.clusterSelfLink
      toFieldPath: spec.forProvider.GkeClusterId
      transforms:
        - type: string
          string:
            type: TrimPrefix
            trim: "https://container.googleapis.com/v1/"
  - name: feature
    base:
      apiVersion: anthos.gcp.crossplane.io/v1alpha1
      kind: HubFeature
      spec:
        providerConfigRef:
          name: default-gcp
        forProvider:
          location: global
          featureName: configmanagement
  - name: configSync
    base:
      apiVersion: anthos.gcp.crossplane.io/v1alpha1
      kind: HubFeatureMembership
      spec:
        providerConfigRef:
          name: default-gcp
        forProvider:
          location: global
          feature: configmanagement
          configManagement:
            version: "1.12.0"
            git:
              secretType: none
              repo: https://github.com/bkauf/anthos-crossplane-demo.git
              policyDir: cluster-acm/
              branch: master
    patches:
    - fromFieldPath: status.membershipId
      toFieldPath: spec.forProvider.membership
